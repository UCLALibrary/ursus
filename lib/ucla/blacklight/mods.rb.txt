# frozen_string_literal: true

require 'builder'

# This module provide Dublin Core export based on the document's semantic values
module Ucla::Blacklight::Mods
  def self.extended(document)
    # Register our exportable formats
    Ucla::Blacklight::Mods.register_export_formats(document)
  end

  def self.register_export_formats(document)
    document.will_export_as(:xml)
    document.will_export_as(:mods_xml, 'text/xml')
    document.will_export_as(:oai_mods_xml, 'text/xml')
  end

  def mods_field_names
    [:title,  :identifier, :genre, :typeOfResource]
  end

  # dublin core elements are mapped against the #mods_field_names whitelist.
  def export_as_oai_mods_xml
    xml = Builder::XmlMarkup.new
    xml.tag!('xmlns:xlink' => "http://www.w3.org/1999/xlink",
             'xmlns:mods' => "http://www.loc.gov/mods/v3",
             'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance",
             'xsi:schemaLocation' => %(http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-8.xsd)) do
      to_semantic_values.select { |field, _values| mods_field_name? field }.each do |field, values|
        Array.wrap(values).each do |v|
          xml.tag! "mods:#{field}", v
        end
      end
    end
    xml.target!
  end

  alias_method :export_as_xml, :export_as_oai_mods_xml
  alias_method :export_as_mods_xml, :export_as_oai_mods_xml

  private

  def mods_field_name? field
    mods_field_names.include? field.to_sym
  end
end